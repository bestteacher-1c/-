
Процедура СформироватьПроводкиКурсовыеРазницы(Движение, НаборЗаписей,
		ДтКт) Экспорт

	Если Движение["Счет" + ДтКт].Валютный Тогда

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	ПроводкиОстатки.СуммаОстатокДт,
			|	ПроводкиОстатки.СуммаОстатокКт,
			|	ПроводкиОстатки.СуммаВалютыОстатокДт,
			|	ПроводкиОстатки.СуммаВалютыОстатокКт
			|ИЗ
			|	РегистрБухгалтерии.Проводки.Остатки(
			|			&Период,
			|			Счет = &Счет,
			|			,
			|			Организация = &Организация
			|				И Валюта = &Валюта) КАК ПроводкиОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КурсыВалютСрезПоследних.Курс
			|ИЗ
			|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсыВалютСрезПоследних";

		Запрос.УстановитьПараметр("Валюта", Движение["Валюта" + ДтКт]);
		Запрос.УстановитьПараметр("Организация", Движение.Организация);
		Запрос.УстановитьПараметр("Период", Движение.Период);
		Запрос.УстановитьПараметр("Счет", Движение["Счет" + ДтКт]);

		СхемаЗапроса = Новый СхемаЗапроса;

		СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);

		Если Движение["Счет" + ДтКт].ПоПодразделениям Тогда

			Таблица_Из = СхемаЗапроса.ПакетЗапросов.Получить(0).Операторы.Получить(0).Источники.Получить(0);

			УсловиеНаИзмерение = Строка(Таблица_Из.Источник.Параметры.Получить(3).Выражение);

			Таблица_Из.Источник.Параметры.Получить(3).Выражение = Новый ВыражениеСхемыЗапроса(""
				+ УсловиеНаИзмерение + " И Подразделение = &Подразделение");

			Запрос.УстановитьПараметр("Подразделение", Движение["Подразделение"
				+ ДтКт]);

		КонецЕсли;

		Для каждого ТекСубконто Из Движение["Субконто" + ДтКт] Цикл

			СтрокаТЧВидыСубконто = Движение["Счет"
				+ ДтКт].ВидыСубконто.Найти(ТекСубконто.Ключ, "ВидСубконто");

			Если СтрокаТЧВидыСубконто.ТолькоОбороты Тогда
				Продолжить;
			КонецЕсли;

			НомерСубконто = СтрокаТЧВидыСубконто.НомерСтроки;

			Таблица_Из = СхемаЗапроса.ПакетЗапросов.Получить(0).Операторы.Получить(0).Источники.Получить(0);

			УсловиеНаИзмерение = Строка(Таблица_Из.Источник.Параметры.Получить(3).Выражение);

			Таблица_Из.Источник.Параметры.Получить(3).Выражение = Новый ВыражениеСхемыЗапроса(""
				+ УсловиеНаИзмерение + " И Субконто" + НомерСубконто + " = &Субконто"
				+ НомерСубконто);

			Запрос.УстановитьПараметр("Субконто"
				+ НомерСубконто, ТекСубконто.Значение);

		КонецЦикла;

		Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();

		МассивРезультатов = Запрос.ВыполнитьПакет();

		РезультатЗапроса = МассивРезультатов[1];

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			Курс = ВыборкаДетальныеЗаписи.Курс;

		КонецЦикла;

		РезультатЗапроса = МассивРезультатов[0];

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		ТекущаяОценкаДт = 0;
		ТекущаяОценкаКт = 0;

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			ТекущаяОценкаДт = ВыборкаДетальныеЗаписи.СуммаВалютыОстатокДт * Курс;

			Если ТекущаяОценкаДт = 0 Тогда

				ТекущаяОценкаКт = ВыборкаДетальныеЗаписи.СуммаВалютыОстатокКт * Курс;

				КурсоваяРазница = ВыборкаДетальныеЗаписи.СуммаОстатокКт
					- ВыборкаДетальныеЗаписи.СуммаОстатокДт - ТекущаяОценкаКт;

			Иначе

				КурсоваяРазница = ВыборкаДетальныеЗаписи.СуммаОстатокДт
					- ВыборкаДетальныеЗаписи.СуммаОстатокКт - ТекущаяОценкаДт;

			КонецЕсли;

			Если КурсоваяРазница = 0 Тогда

				Продолжить;

			ИначеЕсли ТекущаяОценкаДт > 0 и КурсоваяРазница > 0 Или ТекущаяОценкаКт > 0
					И КурсоваяРазница < 0 Тогда

				Проводка = НаборЗаписей.Добавить();

				Проводка.СчетДт = ПланыСчетов.Счета.РасходыДоходы;

				Проводка.СчетКт = Движение["Счет" + ДтКт];

				Для каждого ТекСубконто Из Движение["Субконто" + ДтКт] Цикл

					Проводка.СубконтоКт.Вставить(ТекСубконто.Ключ, ТекСубконто.Значение);

				КонецЦикла;

				Серверный.ЗаполнитьПодразделениеСтороныПроводки(Проводка, Движение["Подразделение"
					+ ДтКт], "Кт");

				Проводка.Период = Движение.Период;
				Проводка.Организация = Движение.Организация;
				Проводка.Сумма = ?(КурсоваяРазница > 0, КурсоваяРазница, -КурсоваяРазница);
				Проводка.СодержаниеПроводки = "Курсовая разница";

				//ИначеЕсли ТекущаяОценкаДт < 0 и КурсоваяРазница < 0 Или ТекущаяОценкаКт > 0 И КурсоваяРазница > 0 Тогда
			Иначе
				Проводка = НаборЗаписей.Добавить();

				Проводка.СчетКт = ПланыСчетов.Счета.РасходыДоходы;

				Проводка.СчетДт = Движение["Счет" + ДтКт];

				Для каждого ТекСубконто Из Движение["Субконто" + ДтКт] Цикл

					Проводка.СубконтоДт.Вставить(ТекСубконто.Ключ, ТекСубконто.Значение);

				КонецЦикла;

				Серверный.ЗаполнитьПодразделениеСтороныПроводки(Проводка, Движение["Подразделение"
					+ ДтКт], "Дт");

				Проводка.Период = Движение.Период;
				Проводка.Организация = Движение.Организация;
				Проводка.Сумма = ?(КурсоваяРазница > 0, КурсоваяРазница, -КурсоваяРазница);
				Проводка.СодержаниеПроводки = "Курсовая разница";

			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры
