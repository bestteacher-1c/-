Процедура ЗаполнитьПодразделениеСтороныПроводки(Движение, Подразделение, ДтКт) Экспорт

	ПараметрыФО = Новый Структура;
	ПараметрыФО.Вставить("ПФО_Организация", Движение.Организация);

	ПоПодразделениям = ПолучитьФункциональнуюОпцию("УчетПоПодразделениям", ПараметрыФО);

	Если ПоПодразделениям И Движение["Счет" + ДтКт].ПоПодразделениям Тогда

		Движение["Подразделение" + ДтКт] = Подразделение;

	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьСубконтоСтороныПроводки(Движение, ИмяИлиКоличествоСубконто, ЗначениеСубконто, ДтКт) Экспорт

	Если (ЗначениеЗаполнено(Движение["Счет" + ДтКт]) = Ложь) Тогда
		Возврат; //Если не заполнен счет, то субконто не надо заполнять! 
	КонецЕсли;

	Если ТипЗнч(ИмяИлиКоличествоСубконто) = Тип("Строка") Тогда

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	СчетаВидыСубконто.ВидСубконто
			|ИЗ
			|	ПланСчетов.Счета.ВидыСубконто КАК СчетаВидыСубконто
			|ГДЕ
			|	СчетаВидыСубконто.Ссылка = &СсылкаНаСчет
			|	И СчетаВидыСубконто.ВидСубконто.ИмяПредопределенныхДанных = &ИмяСубконто";

		Запрос.УстановитьПараметр("ИмяСубконто", ИмяИлиКоличествоСубконто);
		Запрос.УстановитьПараметр("СсылкаНаСчет", Движение["Счет" + ДтКт]);

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			Движение["Субконто"
				+ ДтКт].Вставить(ВыборкаДетальныеЗаписи.ВидСубконто, ЗначениеСубконто);

		КонецЦикла;

	ИначеЕсли ТипЗнч(ИмяИлиКоличествоСубконто) = Тип("Число") Тогда

	//----Определяем количество субконто---
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	КОЛИЧЕСТВО(СчетаВидыСубконто.ВидСубконто) КАК КоличествоСубконто
			|ИЗ
			|	ПланСчетов.Счета.ВидыСубконто КАК СчетаВидыСубконто
			|ГДЕ
			|	СчетаВидыСубконто.Ссылка = &СсылкаНаСчет";

		Запрос.УстановитьПараметр("СсылкаНаСчет", Движение["Счет" + ДтКт]);

		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

		КоличествоСубконто = 0;

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			КоличествоСубконто = ВыборкаДетальныеЗаписи.КоличествоСубконто;

		КонецЦикла;

		//----Проверяем, есть ли субконто с номером у данного счета
		Если КоличествоСубконто >= ИмяИлиКоличествоСубконто Тогда

			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
				|	СчетаВидыСубконто.ВидСубконто
				|ИЗ
				|	ПланСчетов.Счета.ВидыСубконто КАК СчетаВидыСубконто
				|ГДЕ
				|	СчетаВидыСубконто.Ссылка = &Ссылка
				|	И СчетаВидыСубконто.НомерСтроки = &НомерСтроки";

			Запрос.УстановитьПараметр("НомерСтроки", ИмяИлиКоличествоСубконто);
			Запрос.УстановитьПараметр("Ссылка", Движение["Счет" + ДтКт]);

			РезультатЗапроса = Запрос.Выполнить();

			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				Движение["Субконто"
					+ ДтКт].Вставить(ВыборкаДетальныеЗаписи.ВидСубконто, ЗначениеСубконто);

			КонецЦикла;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьКоличествоСтороныПроводки(Движение, КолВо, ДтКт) Экспорт

	Если (Движение["Счет" + ДтКт].Количественный = Истина) Тогда

		Движение["Количество" + ДтКт] = КолВо;

	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьВалютуСтороныПроводки(Движение, Валюта, ВалСумм, ДтКт) Экспорт

	Если (Движение["Счет" + ДтКт].Валютный = Истина) Тогда

		Движение["Валюта" + ДтКт] = Валюта;
		Движение["СуммаВалюты" + ДтКт] = ВалСумм;

	КонецЕсли;

КонецПроцедуры

// ПересчитатьИзВалютыВВалюту()

// Процедура - Изменить активность движений
//
// Параметры:
//  Ссылка			 - ДокументСсылка	-  Может быть ссылка на любой документ
//  НужнаяАктивность - Булево	 -  По Умолчанию = Неопределено
//
Процедура ИзменитьАктивностьДвижений(Ссылка, НужнаяАктивность = Неопределено) Экспорт

	НЗ = РегистрыБухгалтерии.Проводки.СоздатьНаборЗаписей();
	НЗ.Отбор.Регистратор.Установить(Ссылка);

	НЗ.Прочитать();

	Если НужнаяАктивность = Неопределено Тогда

		Если НЗ.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

		НужнаяАктивность = Не НЗ[0].Активность;

	КонецЕсли;

	НЗ.УстановитьАктивность(НужнаяАктивность);

	НЗ.Записать();

КонецПроцедуры

Процедура ПроверкаЗаполненияПодразделенияОбработкаПроверкиЗаполнения(Источник,
		Отказ, ПроверяемыеРеквизиты) Экспорт

	ПараметрыФО = Новый Структура;
	ПараметрыФО.Вставить("ПФО_Организация", Источник.Организация);

	ПоПодразделениям = ПолучитьФункциональнуюОпцию("УчетПоПодразделениям", ПараметрыФО);

	Если ПоПодразделениям = Ложь Тогда
		
		Индекс =  ПроверяемыеРеквизиты.Найти("Подразделение");
		
		Если Индекс <> Неопределено Тогда
		
			ПроверяемыеРеквизиты.Удалить(Индекс);
		
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры
